stages:
    - fastdl
    - deploy

.deploy_template: &deploy_template
    stage: deploy
    script:
    - whoami

    - cd /srv/daemon-data
    - >
        for d in ./*/ ; do
            cd "$d";
            echo "Checking: $d"
            if [ -d ".git" ]; then

                CI_LOCAL_REMOTE=`git remote get-url origin`;
                CI_LOCAL_REMOTE="${CI_LOCAL_REMOTE##*@}";
                CI_LOCAL_REMOTE=`echo $CI_LOCAL_REMOTE | tr : /`
                CI_LOCAL_REMOTE=${CI_LOCAL_REMOTE%.git}

                CI_REMOTE_REMOTE="$CI_SERVER_HOST/$CI_PROJECT_PATH.git"
                CI_REMOTE_REMOTE=`echo $CI_REMOTE_REMOTE | tr : /`
                CI_REMOTE_REMOTE=${CI_REMOTE_REMOTE%.git}

                echo "Comparing remotes $CI_LOCAL_REMOTE and $CI_REMOTE_REMOTE."
                if [ $CI_LOCAL_REMOTE == $CI_REMOTE_REMOTE ]; then

                    echo "Comparing branches `git rev-parse --abbrev-ref HEAD` and $CI_COMMIT_REF_NAME."
                    if [ `git rev-parse --abbrev-ref HEAD` == $CI_COMMIT_REF_NAME ]; then


                        echo "setting git config"
                        git config --global user.email "support@creators.tf"
                        git config --global user.name "Creators.TF Production"

                        COMMIT_OLD=`git rev-parse HEAD`;

                        echo "stashing"
                        git stash;

                        echo "cleaning cfg folder"
                        git clean -d -f -x tf/cfg/

                        # UNCOMMENT THESE LINES TO FORCE CLEANUP OF EXTRA BULLSHIT THAT MIGHT BE ON SERVERS
                        # echo "git clean"
                        # git clean -d -f -x tf/addons/sourcemod/plugins/
                        # git clean -d -f -x tf/addons/sourcemod/plugins/external
                        # git clean -d -f -x tf/addons/sourcemod/data/
                        # git clean -d -f -x tf/addons/sourcemod/gamedata/
                        # THIS WILL DELETE ALL SOURCEMOD LOGS, INCLUDING STAC AND CHAT LOGS
                        # git clean -d -f -x tf/addons/sourcemod/logs/

                        echo "fetching"
                        git fetch origin $CI_COMMIT_REF_NAME;

                        echo "resetting"
                        git reset --hard origin/$CI_COMMIT_REF_NAME;

                        echo "chmodding"
                        chmod 744 build.sh;
                        chmod 744 start.sh;

                        # don't run this often
                        # echo "garbage collecting"
                        # git gc --force ;

                        echo "building"
                        ./build.sh $COMMIT_OLD;

                    fi;
                fi;
            fi;
            cd ../;
        done

deploy-europe:
    tags:
    - eupub
    <<: *deploy_template

deploy-virginia:
    tags:
    - virginiapub
    <<: *deploy_template

# deploy-russia:
#     tags:
#     - russiapub
#     <<: *deploy_template

deploy-la:
    tags:
    - lapub
    <<: *deploy_template

deploy-fastdl:
    stage: fastdl
    script:
    - whoami
    - shopt -s globstar

    - SHA_BEFORE="$CI_COMMIT_BEFORE_SHA"
    - SHA_AFTER="$CI_COMMIT_SHA"

    - echo "Comparing $SHA_BEFORE // $SHA_AFTER"

    - exit

    - cd $CI_PROJECT_DIR
    - git checkout $CI_COMMIT_REF_NAME
    - git reset --hard origin/$CI_COMMIT_REF_NAME

    - echo "[INFO] Repository path = $CI_PROJECT_DIR"

    - FASTDL_PATH="/var/www/fastdl/content/branches/$CI_COMMIT_REF_NAME";
    - cd tf;

    - >
        while read pattern; do

            # We go through all the files of this pattern and see if bz2 version is valid.
            for i in ./$pattern; do

                # Skip missing files.
                [[ ! -f $i ]] && continue;

                ASSET_SRC_PATH=`realpath $i`;
                ASSET_FASTDL_PATH=$FASTDL_PATH/$i;
                ASSET_BZ2_PATH=$ASSET_FASTDL_PATH.bz2;

                RECOMPRESS=0;

                # Recompress if bz2 file does not exist.
                [[ ! -f $ASSET_BZ2_PATH ]] && RECOMPRESS=1;

                # Recomress if checksums do not match.
                if [[ $RECOMPRESS = 0 ]]; then

                    ASSET_MD5_FROM_SRC=`md5sum $ASSET_SRC_PATH | awk '{ print $1 }'`;
                    ASSET_MD5_FROM_BZ2=`bzip2 -d -c $ASSET_BZ2_PATH | md5sum | awk '{ print $1 }'`;

                    if [ "$ASSET_MD5_FROM_SRC" != "$ASSET_MD5_FROM_BZ2" ]; then
                        RECOMPRESS=1;
                    fi
                fi

                if [[ $RECOMPRESS = 1 ]]; then

                    # Remove old bz2 if exists.
                    [[ -f $ASSET_BZ2_PATH ]] && rm $ASSET_BZ2_PATH;

                    # Validate directories
                    mkdir -p ${ASSET_FASTDL_PATH%/*}

                    # Copying the src file.
                    cp $ASSET_SRC_PATH $ASSET_FASTDL_PATH;

                    echo "[INFO] Archiving $ASSET_FASTDL_PATH";
                    bzip2 $ASSET_FASTDL_PATH;
                fi

            done
        done < ../.ci-fastdl
    - exit

    tags:
    - fastdl
